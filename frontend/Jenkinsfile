#!groovy

pipeline {
    environment {
        imageName = 'mohammedamine/mern-frontend'
        registryCredentialSet = 'dockerhub'
        dockerInstance = ''
        myDir = 'frontend'
    }
    agent any
    stages {

        stage('React builder') {
            agent {
                docker {
                    image 'node:lts-alpine'
                }
            }
            steps {
                dir(myDir) {
                    sh 'yarn install --production'
                    sh 'yarn build'
                    stash includes: '**', name: 'myBuild'
                }
            }
        }

        stage('Building image') {
            steps {
                script {
                    dir(myDir) {
                        unstash 'myBuild'
                        dockerInstance = docker.build(imageName)
                    }
                }
            }
        }

//         stage('Publish image') {
//             steps {
//                 echo 'Publishing container image to the private registry...'
//                 script {
//                     docker.withRegistry('', registryCredentialSet) {
//                         /* Push the container to the custom Registry */
//                         dockerInstance.push('latest')
//                     }
//                 }
//             }
//         }

//         stage('Deploy') {
//             when {
//                 beforeInput true
//                 branch 'master'
//             }
//             input {
//                 message "Should we continue to Production?"
//                 id "simple-input"
//             }
//             steps {
//                 //implement Kubernetes deployment here
//                 echo 'Sending deployment request to Kubernetes...'
//             }
//         }
//
//         stage('Remove cache and unused docker image') {
//             input {
//                 message "Would you like to remove image cache and unused docker image?"
//                 id "simple-input"
//             }
//             steps {
//                 sh "docker image prune -a -f"
//             }
//         }
    }
}